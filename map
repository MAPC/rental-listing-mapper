#!/usr/bin/env python3

import json
import sqlalchemy
import pandas as pd
from sys import exit
from os import environ, path


def longmap(record):
    if 'lng' in record:
        return float(record['lng'])
    else:
        return float(record['Longitude'])

def latmap(record):
    if 'lat' in record:
        return float(record['lat'])
    else:
        return float(record['Latitude'])


dtypes = {
    'survey_id': int,
    'payload': str,
    'uid': str,
    'last_seen': str,
}


if 'MAPPER_YEAR' in environ:
    year = int(environ['MAPPER_YEAR'])
else:
    print("You must set MAPPER_YEAR in the environment")
    exit(1)

if 'MAPPER_QUARTER' in environ and int(environ['MAPPER_QUARTER']) in [1, 2, 3, 4]:
    quarter = int(environ['MAPPER_QUARTER'])
else:
    print("You must set MAPPER_QUARTER in the environment, as 1, 2, 3, or 4")
    exit(1)

months = ['%d-%02d' % (year, i + ((quarter - 1) * 3)) for i in [1, 2, 3]]


engine = sqlalchemy.create_engine('postgresql://{}:{}@{}:{}/{}'.format(environ['DB_USER'], environ['DB_PASSWORD'], environ['DB_HOST'], environ['DB_PORT'], environ['DB_NAME']))
df = pd.read_sql_query(sqlalchemy.text("SELECT * FROM listings WHERE last_seen LIKE '" + months[0] + "%' OR last_seen LIKE '" + months[1] + "%' OR last_seen LIKE '" + months[2] + "%'"), engine)
df.rename(columns={'posting_date': 'post_at'}, inplace=True)

df = df.dropna(subset=['payload'])
df['payload'] = df['payload'].astype(str).apply(json.loads)
df['longitude'] = df['payload'].apply(latmap)
df = df[df['longitude'] > 37]
df['latitude'] = df['payload'].apply(longmap)

mapped = df[['uid', 'ask', 'bedrooms', 'title', 'address', 'post_at', 'created_at', 'updated_at', 'source_id', 'survey_id', 'latitude', 'longitude']]

mapped.to_csv(path.join(environ['OUT_FILE_PATH'], environ['OUT_FILE_NAME']), index=False, header=False)
